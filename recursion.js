// Дано натуральное число n. Напишите рекурсивную функцию, которая возвращает строку чисел от 1 до n, разделенных пробелом.
//Основная сложность задачи заключается в том, что ее необходимо решить с использованием рекурсии.

// let res = '';
// function my_function(x) {
//     if (x < 1) return 1;
//     res = `${x} ` + res;
//     my_function(x-1);
//     return res;
// }
// console.log(my_function(9));




//В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть из функции их суммарную длину.
// function testStr(a, b) {
//     return a.length + b.length;
// }
// testStr('12345', '67890');


// В этом задании в нашу функцию testStr первым параметром передается строка (переменная str), а вторым - число (переменная n) . Вам нужно вернуть из функции символ строки , порядковый номер которого указан в переданном в функцию числе.
// Подсказка: порядковый номер не равен индексу символа в строке. Если есть сомнения - перечитайте предыдущие шаги.
// function testStr(str, n) {
//     return (str[n-1]);
// }
// testStr('12345', '3');


//В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть из функции строку, которая будет включать в себя обе этих строки, преобразовав в первой строке все буквы в заглавные, а во второй - в строчные.
// function testStr(a, b) {
//     return (a.toUpperCase()).concat(b.toLowerCase());
// }
//
// testStr('abc', 'abc');

// В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть индекс позиции, с которой начинается вхождение второй строки в первую.
function testStr(a, b) {
    return (a.indexOf(b));
}

testStr('Приветпривет!!!', 'ивет');